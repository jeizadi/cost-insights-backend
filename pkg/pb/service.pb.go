// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/seizadi/aws-cost/pkg/pb/service.proto

package pb

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// TODO: Structure your own protobuf messages. Each protocol buffer message is a
// small logical record of information, containing a series of name-value pairs.
type VersionResponse struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionResponse) Reset()         { *m = VersionResponse{} }
func (m *VersionResponse) String() string { return proto.CompactTextString(m) }
func (*VersionResponse) ProtoMessage()    {}
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_32bf3e45ff3a1a40, []int{0}
}

func (m *VersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionResponse.Unmarshal(m, b)
}
func (m *VersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionResponse.Marshal(b, m, deterministic)
}
func (m *VersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionResponse.Merge(m, src)
}
func (m *VersionResponse) XXX_Size() int {
	return xxx_messageInfo_VersionResponse.Size(m)
}
func (m *VersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VersionResponse proto.InternalMessageInfo

func (m *VersionResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type ProductInsightsOptions struct {
	Product              string   `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	Group                string   `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Intervals            string   `protobuf:"bytes,3,opt,name=intervals,proto3" json:"intervals,omitempty"`
	Project              string   `protobuf:"bytes,4,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductInsightsOptions) Reset()         { *m = ProductInsightsOptions{} }
func (m *ProductInsightsOptions) String() string { return proto.CompactTextString(m) }
func (*ProductInsightsOptions) ProtoMessage()    {}
func (*ProductInsightsOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_32bf3e45ff3a1a40, []int{1}
}

func (m *ProductInsightsOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductInsightsOptions.Unmarshal(m, b)
}
func (m *ProductInsightsOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductInsightsOptions.Marshal(b, m, deterministic)
}
func (m *ProductInsightsOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductInsightsOptions.Merge(m, src)
}
func (m *ProductInsightsOptions) XXX_Size() int {
	return xxx_messageInfo_ProductInsightsOptions.Size(m)
}
func (m *ProductInsightsOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductInsightsOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ProductInsightsOptions proto.InternalMessageInfo

func (m *ProductInsightsOptions) GetProduct() string {
	if m != nil {
		return m.Product
	}
	return ""
}

func (m *ProductInsightsOptions) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *ProductInsightsOptions) GetIntervals() string {
	if m != nil {
		return m.Intervals
	}
	return ""
}

func (m *ProductInsightsOptions) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

// TODO: Structure your own protobuf messages. Each protocol buffer message is a
// small logical record of information, containing a series of name-value pairs.
type LastCompleteBillingDateResponse struct {
	Date                 string   `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LastCompleteBillingDateResponse) Reset()         { *m = LastCompleteBillingDateResponse{} }
func (m *LastCompleteBillingDateResponse) String() string { return proto.CompactTextString(m) }
func (*LastCompleteBillingDateResponse) ProtoMessage()    {}
func (*LastCompleteBillingDateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_32bf3e45ff3a1a40, []int{2}
}

func (m *LastCompleteBillingDateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LastCompleteBillingDateResponse.Unmarshal(m, b)
}
func (m *LastCompleteBillingDateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LastCompleteBillingDateResponse.Marshal(b, m, deterministic)
}
func (m *LastCompleteBillingDateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LastCompleteBillingDateResponse.Merge(m, src)
}
func (m *LastCompleteBillingDateResponse) XXX_Size() int {
	return xxx_messageInfo_LastCompleteBillingDateResponse.Size(m)
}
func (m *LastCompleteBillingDateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LastCompleteBillingDateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LastCompleteBillingDateResponse proto.InternalMessageInfo

func (m *LastCompleteBillingDateResponse) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func init() {
	proto.RegisterType((*VersionResponse)(nil), "awscost.VersionResponse")
	proto.RegisterType((*ProductInsightsOptions)(nil), "awscost.ProductInsightsOptions")
	proto.RegisterType((*LastCompleteBillingDateResponse)(nil), "awscost.LastCompleteBillingDateResponse")
}

func init() {
	proto.RegisterFile("github.com/seizadi/aws-cost/pkg/pb/service.proto", fileDescriptor_32bf3e45ff3a1a40)
}

var fileDescriptor_32bf3e45ff3a1a40 = []byte{
	// 427 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xc1, 0x6a, 0x14, 0x41,
	0x10, 0x65, 0x62, 0x74, 0x4d, 0x5f, 0x22, 0x8d, 0x84, 0x61, 0x0d, 0x44, 0x07, 0x24, 0x01, 0xdd,
	0x69, 0x89, 0x78, 0xf2, 0xb4, 0x89, 0x12, 0x04, 0xc1, 0x90, 0x83, 0x07, 0x3d, 0x2c, 0x3d, 0xb3,
	0x65, 0xa7, 0x75, 0xb6, 0xab, 0xe9, 0xaa, 0x9d, 0x75, 0x3d, 0x89, 0x17, 0x3f, 0xc0, 0xa3, 0x9f,
	0xe5, 0x2f, 0xf8, 0x21, 0x32, 0xd3, 0xbd, 0x6b, 0x48, 0x08, 0xb9, 0x75, 0xd5, 0xab, 0x7a, 0xef,
	0x55, 0x55, 0x8b, 0x67, 0xc6, 0xf2, 0xf9, 0xbc, 0x2a, 0x6b, 0x9c, 0x29, 0x02, 0xfb, 0x4d, 0x4f,
	0xad, 0xd2, 0x0b, 0x1a, 0xd5, 0x48, 0xac, 0xfc, 0x17, 0xa3, 0x7c, 0xa5, 0x08, 0x42, 0x6b, 0x6b,
	0x28, 0x7d, 0x40, 0x46, 0x39, 0xd0, 0x0b, 0xea, 0xd0, 0xe1, 0x03, 0x83, 0x68, 0x1a, 0x50, 0x7d,
	0xba, 0x9a, 0x7f, 0x52, 0x30, 0xf3, 0xbc, 0x8c, 0x55, 0xc3, 0xdd, 0x04, 0x6a, 0x6f, 0x95, 0x76,
	0x0e, 0x59, 0xb3, 0x45, 0x47, 0x09, 0x1d, 0x5f, 0x50, 0x05, 0xd7, 0xe2, 0xd2, 0x07, 0xfc, 0xba,
	0x8c, 0x4c, 0xf5, 0xc8, 0x80, 0x1b, 0xb5, 0xba, 0xb1, 0x53, 0xcd, 0xa0, 0xae, 0x3c, 0x12, 0xc5,
	0xd3, 0x0b, 0xc5, 0xb4, 0xd0, 0xc6, 0x40, 0x50, 0xe8, 0x7b, 0x91, 0xab, 0x82, 0xc5, 0x13, 0xb1,
	0xfd, 0x1e, 0x02, 0x59, 0x74, 0x67, 0x40, 0x1e, 0x1d, 0x81, 0xcc, 0xc5, 0xa0, 0x8d, 0xa9, 0x3c,
	0x7b, 0x98, 0x1d, 0x6c, 0x9d, 0xad, 0xc2, 0xe2, 0x7b, 0x26, 0x76, 0x4e, 0x03, 0x4e, 0xe7, 0x35,
	0xbf, 0x71, 0x64, 0xcd, 0x39, 0xd3, 0xbb, 0xc8, 0xdc, 0x35, 0xf9, 0x88, 0xac, 0x9a, 0x52, 0x28,
	0xef, 0x8b, 0xdb, 0x26, 0xe0, 0xdc, 0xe7, 0x1b, 0x7d, 0x3e, 0x06, 0x72, 0x57, 0x6c, 0x59, 0xc7,
	0x10, 0x5a, 0xdd, 0x50, 0x7e, 0xab, 0x47, 0xfe, 0x27, 0x12, 0xdb, 0x67, 0xa8, 0x39, 0xdf, 0x5c,
	0xb3, 0x75, 0x61, 0xf1, 0x42, 0xec, 0xbd, 0xd5, 0xc4, 0xc7, 0x38, 0xf3, 0x0d, 0x30, 0x1c, 0xd9,
	0xa6, 0xb1, 0xce, 0xbc, 0xd2, 0x0c, 0x6b, 0xff, 0x52, 0x6c, 0x76, 0xeb, 0x48, 0x3e, 0xfa, 0xf7,
	0xe1, 0x47, 0x31, 0x18, 0x2f, 0xe8, 0x18, 0x89, 0xe5, 0xa9, 0x10, 0x27, 0xc0, 0x69, 0x68, 0xb9,
	0x53, 0xc6, 0x7b, 0x94, 0xab, 0x63, 0x95, 0xaf, 0xbb, 0x63, 0x0d, 0xf3, 0x32, 0x5d, 0xb3, 0xbc,
	0xb4, 0x9e, 0xe2, 0xde, 0x8f, 0x3f, 0x7f, 0x7f, 0x6d, 0x08, 0x79, 0x57, 0xa5, 0xb5, 0x1c, 0xfe,
	0xce, 0xc4, 0x76, 0x47, 0xbd, 0xda, 0xc9, 0xd8, 0x5b, 0xf9, 0x33, 0x13, 0xc3, 0x13, 0xe0, 0x6b,
	0xbc, 0x5e, 0x2b, 0x7b, 0xb0, 0x96, 0xbd, 0x61, 0xca, 0x62, 0xbf, 0xb7, 0xf1, 0x48, 0xee, 0x29,
	0x03, 0x3c, 0x69, 0x34, 0xf1, 0xa4, 0x4e, 0xe5, 0x93, 0x2a, 0xd6, 0x4f, 0xba, 0xd1, 0x8f, 0xf6,
	0x3f, 0x3c, 0xbe, 0xf9, 0x2b, 0xbf, 0xf4, 0x55, 0x75, 0xa7, 0xf7, 0xf2, 0xfc, 0x5f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x3a, 0x1c, 0x5d, 0xbf, 0xfa, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AwsCostClient is the client API for AwsCost service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AwsCostClient interface {
	GetVersion(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VersionResponse, error)
}

type awsCostClient struct {
	cc *grpc.ClientConn
}

func NewAwsCostClient(cc *grpc.ClientConn) AwsCostClient {
	return &awsCostClient{cc}
}

func (c *awsCostClient) GetVersion(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VersionResponse, error) {
	out := new(VersionResponse)
	err := c.cc.Invoke(ctx, "/awscost.AwsCost/GetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AwsCostServer is the server API for AwsCost service.
type AwsCostServer interface {
	GetVersion(context.Context, *empty.Empty) (*VersionResponse, error)
}

func RegisterAwsCostServer(s *grpc.Server, srv AwsCostServer) {
	s.RegisterService(&_AwsCost_serviceDesc, srv)
}

func _AwsCost_GetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AwsCostServer).GetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/awscost.AwsCost/GetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AwsCostServer).GetVersion(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _AwsCost_serviceDesc = grpc.ServiceDesc{
	ServiceName: "awscost.AwsCost",
	HandlerType: (*AwsCostServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVersion",
			Handler:    _AwsCost_GetVersion_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/seizadi/aws-cost/pkg/pb/service.proto",
}

// CostInsightsApiClient is the client API for CostInsightsApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CostInsightsApiClient interface {
	GetLastCompleteBillingDate(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*LastCompleteBillingDateResponse, error)
}

type costInsightsApiClient struct {
	cc *grpc.ClientConn
}

func NewCostInsightsApiClient(cc *grpc.ClientConn) CostInsightsApiClient {
	return &costInsightsApiClient{cc}
}

func (c *costInsightsApiClient) GetLastCompleteBillingDate(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*LastCompleteBillingDateResponse, error) {
	out := new(LastCompleteBillingDateResponse)
	err := c.cc.Invoke(ctx, "/awscost.CostInsightsApi/GetLastCompleteBillingDate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CostInsightsApiServer is the server API for CostInsightsApi service.
type CostInsightsApiServer interface {
	GetLastCompleteBillingDate(context.Context, *empty.Empty) (*LastCompleteBillingDateResponse, error)
}

func RegisterCostInsightsApiServer(s *grpc.Server, srv CostInsightsApiServer) {
	s.RegisterService(&_CostInsightsApi_serviceDesc, srv)
}

func _CostInsightsApi_GetLastCompleteBillingDate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CostInsightsApiServer).GetLastCompleteBillingDate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/awscost.CostInsightsApi/GetLastCompleteBillingDate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CostInsightsApiServer).GetLastCompleteBillingDate(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _CostInsightsApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "awscost.CostInsightsApi",
	HandlerType: (*CostInsightsApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetLastCompleteBillingDate",
			Handler:    _CostInsightsApi_GetLastCompleteBillingDate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/seizadi/aws-cost/pkg/pb/service.proto",
}
